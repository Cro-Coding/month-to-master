{"ast":null,"code":"import gsap from \"gsap\"; // OPEN MENU\n\nexport const staggerReveal = (node1, node2) => {\n  gsap.from([node1, node2], {\n    duration: 0.8,\n    height: 0,\n    transformOrigin: \"right top\",\n    skewY: 2,\n    ease: \"power3.inOut\",\n    stagger: {\n      amount: 0.1\n    }\n  });\n}; // CLOSE MENU\n\nexport const staggerRevealClose = (node1, node2) => {\n  gsap.to([node1, node2], {\n    duration: 0.8,\n    height: 0,\n    ease: \"power3.inOut\",\n    stagger: {\n      amount: 0.07\n    }\n  });\n}; // STAGGER THE LINKS TO APPEAR\n\nexport const staggerText = (node1, node2, node3, node4) => {\n  gsap.from([node1, node2, node3, node4], {\n    duration: 0.8,\n    y: 100,\n    delay: 0.1,\n    ease: \"power3.inOut\",\n    stagger: {\n      amount: 0.3\n    }\n  });\n}; // Fade up for the additonal info on our menu\n\nexport const fadeInUp = node => {\n  gsap.from(node, {\n    y: 60,\n    duration: 1,\n    delay: 0.2,\n    opacity: 0,\n    ease: \"power3.inOut\"\n  });\n}; // Hover on the link\n\nexport const handleHover = e => {\n  gsap.to(e.target, {\n    duration: 0.3,\n    y: 3,\n    skewX: 4,\n    ease: \"power1.inOut\"\n  });\n}; // Hover off the link\n\nexport const handleHoverExit = e => {\n  gsap.to(e.target, {\n    duration: 0.3,\n    y: -3,\n    skewX: 0,\n    ease: \"power1.inOut\"\n  });\n}; // adds city image once you hover on\n\nexport const handleCity = (city, target) => {\n  gsap.to(target, {\n    duration: 0,\n    background: `url(${city}) center center`\n  });\n  gsap.to(target, {\n    duration: 0.4,\n    opacity: 1,\n    ease: \"power3.inOut\"\n  });\n  gsap.from(target, {\n    duration: 0.4,\n    skewY: 2,\n    transformOrigin: \"right top\"\n  });\n}; // Removes the city image once you hover off\n\nexport const handleCityReturn = target => {\n  gsap.to(target, {\n    duration: 0,\n    skewY: 0\n  });\n  gsap.to(target, {\n    duration: 0.4,\n    opacity: 0,\n    skewY: 0\n  });\n};","map":{"version":3,"sources":["C:/Users/hp/Desktop/styleon/frontend/src/components/Nav/Animation.js"],"names":["gsap","staggerReveal","node1","node2","from","duration","height","transformOrigin","skewY","ease","stagger","amount","staggerRevealClose","to","staggerText","node3","node4","y","delay","fadeInUp","node","opacity","handleHover","e","target","skewX","handleHoverExit","handleCity","city","background","handleCityReturn"],"mappings":"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","sourcesContent":["import gsap from \"gsap\";\r\n\r\n// OPEN MENU\r\nexport const staggerReveal = (node1, node2) => {\r\n  gsap.from([node1, node2], {\r\n    duration: 0.8,\r\n    height: 0,\r\n    transformOrigin: \"right top\",\r\n    skewY: 2,\r\n    ease: \"power3.inOut\",\r\n    stagger: {\r\n      amount: 0.1\r\n    }\r\n  });\r\n};\r\n\r\n// CLOSE MENU\r\nexport const staggerRevealClose = (node1, node2) => {\r\n  gsap.to([node1, node2], {\r\n    duration: 0.8,\r\n    height: 0,\r\n    ease: \"power3.inOut\",\r\n    stagger: {\r\n      amount: 0.07\r\n    }\r\n  });\r\n};\r\n\r\n// STAGGER THE LINKS TO APPEAR\r\nexport const staggerText = (node1, node2, node3, node4) => {\r\n  gsap.from([node1, node2, node3, node4], {\r\n    duration: 0.8,\r\n    y: 100,\r\n    delay: 0.1,\r\n    ease: \"power3.inOut\",\r\n    stagger: {\r\n      amount: 0.3\r\n    }\r\n  });\r\n};\r\n\r\n// Fade up for the additonal info on our menu\r\nexport const fadeInUp = node => {\r\n  gsap.from(node, {\r\n    y: 60,\r\n    duration: 1,\r\n    delay: 0.2,\r\n    opacity: 0,\r\n    ease: \"power3.inOut\"\r\n  });\r\n};\r\n\r\n// Hover on the link\r\nexport const handleHover = e => {\r\n  gsap.to(e.target, {\r\n    duration: 0.3,\r\n    y: 3,\r\n    skewX: 4,\r\n    ease: \"power1.inOut\"\r\n  });\r\n};\r\n\r\n// Hover off the link\r\nexport const handleHoverExit = e => {\r\n  gsap.to(e.target, {\r\n    duration: 0.3,\r\n    y: -3,\r\n    skewX: 0,\r\n    ease: \"power1.inOut\"\r\n  });\r\n};\r\n\r\n// adds city image once you hover on\r\nexport const handleCity = (city, target) => {\r\n  gsap.to(target, {\r\n    duration: 0,\r\n    background: `url(${city}) center center`\r\n  });\r\n  gsap.to(target, {\r\n    duration: 0.4,\r\n    opacity: 1,\r\n    ease: \"power3.inOut\"\r\n  });\r\n  gsap.from(target, {\r\n    duration: 0.4,\r\n    skewY: 2,\r\n    transformOrigin: \"right top\"\r\n  });\r\n};\r\n\r\n// Removes the city image once you hover off\r\nexport const handleCityReturn = target => {\r\n  gsap.to(target, {\r\n    duration: 0,\r\n    skewY: 0\r\n  });\r\n  gsap.to(target, {\r\n    duration: 0.4,\r\n    opacity: 0,\r\n    skewY: 0\r\n  });\r\n};"]},"metadata":{},"sourceType":"module"}